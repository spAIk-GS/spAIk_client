import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import Header from '../components/Header';
import Footer from '../components/Footer';
import './HistoryPage.scss';

const HistoryPage = () => {
    // ÏÉÅÌÉú Í¥ÄÎ¶¨ (ÌéòÏù¥Ïßï Í¥ÄÎ†® ÏÉÅÌÉú Ï†úÍ±∞)
    const [historyList, setHistoryList] = useState([]);
    const [isLoading, setIsLoading] = useState(true);
    const [error, setError] = useState(null);

    // ÎÇ†Ïßú Ìè¨Îß∑ÌåÖ Ìï®Ïàò
    const formatDate = (dateString) => {
        const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };
        return new Date(dateString).toLocaleDateString('ko-KR', options);
    };

    // Ïª¥Ìè¨ÎÑåÌä∏Í∞Ä Ï≤òÏùå Î°úÎìúÎê† Îïå Ìïú Î≤àÎßå Îç∞Ïù¥ÌÑ∞Î•º Î∂àÎü¨Ïò¥
    useEffect(() => {
        const fetchHistory = async () => {
            setIsLoading(true);
            setError(null);
            const token = localStorage.getItem("accessToken");

            if (!token) {
                setError("Î°úÍ∑∏Ïù∏Ïù¥ ÌïÑÏöîÌï©ÎãàÎã§.");
                setIsLoading(false);
                return;
            }

            try {
                const response = await fetch(`http://localhost:8080/users/me/history`, {
                    headers: {
                        'Authorization': `Bearer ${token}`
                    }
                });

                if (!response.ok) {
                    throw new Error('Î∂ÑÏÑù Í∏∞Î°ùÏùÑ Î∂àÎü¨Ïò§Îäî Îç∞ Ïã§Ìå®ÌñàÏäµÎãàÎã§.');
                }

                const data = await response.json();
                
                setHistoryList(data.content); // Ïã§Ï†ú Îç∞Ïù¥ÌÑ∞Îäî 'content' Î∞∞Ïó¥Ïóê Îã¥Í≤®ÏûàÏùå

            } catch (err) {
                setError(err.message);
            } finally {
                setIsLoading(false);
            }
        };

        fetchHistory();
    }, []); // üëà ÏùòÏ°¥ÏÑ± Î∞∞Ïó¥ÏùÑ ÎπÑÏõåÏÑú ÏµúÏ¥à 1ÌöåÎßå Ïã§ÌñâÎêòÎèÑÎ°ù Î≥ÄÍ≤Ω

    // Î†åÎçîÎßÅ Î°úÏßÅ
    const renderContent = () => {
        if (isLoading) {
            return <div className="loading">Î°úÎî© Ï§ë...</div>;
        }
        if (error) {
            return <div className="error">{error}</div>;
        }
        if (historyList.length === 0) {
            return <div className="no-history">Î∂ÑÏÑù Í∏∞Î°ùÏù¥ ÏóÜÏäµÎãàÎã§.</div>;
        }

        return (
            <ul className="history-list">
                {historyList.map(item => (
                    <li key={item.reportId} className="history-item">
                        <Link to={`/result/${item.presentationId}`}>
                        <div className="history-dot"></div>
                        <img 
                            className="history-thumbnail" 
                            src={item.thumbnailUrl} 
                            alt="Î∂ÑÏÑù Ïç∏ÎÑ§Ïùº" 
                        />
                        <div className="history-text">
                            <span className="history-date">{formatDate(item.createdAt)}</span>
                            <span className="history-title">&nbsp;Î∂ÑÏÑù Í≤∞Í≥º Î≥¥Í∏∞</span>
                        </div>
                        </Link>
                    </li>
                ))}
            </ul>
        );
    };


    return (
        <div className="history-page">
            <Header />
            <main className="history-main">
                <div className='container'>
                <h2>AI Î∂ÑÏÑù Í≥ºÍ±∞ Í∏∞Î°ù</h2>
                {renderContent()}
                </div>
            </main>
            <Footer />
        </div>
    );
};

export default HistoryPage;